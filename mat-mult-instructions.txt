00100000000000000000000000000000 (31)
01010000010000000000000011101000 (32)
00100001000000000000000000000000
01010001010000000000000011100000 (34)

01101001000000110000000000000000 r9 = r0 * r3 // i * 4
00001001100100010000000000000000 r9 = r9 + r1
00001001100101100000000000000000 r9 = r9 + r6
00110100100100000000000000000000 save r4 (0) no address r9

00100111000000000000000000000000 r7 = 0; // r = 0;
01010111010000000000000011011000 (40)

0110 1010 0000 0011 0000000000000000 r10 = r0 * r3 // i * 4
0000 1010 1010 0111 0000000000000000 r10 = r10 + r7

(testar o load)
0111 1010 1010 0000 0000000000000000 load address r10 no r10

0110 1011 0111 0011 0000000000000000 r11 = r7 * r3 // r * 4
0000 1011 1011 0001 0000000000000000 r11 = r11 + r1
0000 1011 1011 0101 0000000000000000 r11 = r11 + r5

0111 1011 1011 0000 0000000000000000 load address r11 no r11

0111 1100 1001 0000 0000000000000000 load address r9 no r12

0110 1010 1010 1011 0000000000000000 r10 = r10 * r11
0000 1100 1100 1010 0000000000000000 r12 = r12 + r10

0011 1100 1001 0000 0000000000000000 save r12 no address r9 (51)



00000111011100100000000000000000 r++;
01000000000000000000000010100000 jump_for_r

00000001000100100000000000000000 j++; (54)
01000000000000000000000010001000 jump_for_j
00000000000000100000000000000000 i++; (56)
01000000000000000000000010000000 jump_for_i
(58)


